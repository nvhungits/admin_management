<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($scope) {
	var c = this;

	//
	//Funtions
	//
	function getRecords(){
		$scope.records = [];
		for(var i = 0; i < c.data.pagingNumber; i++){
			var index = c.data.pagingNumber*$scope.pagingIndex + i;
			if(index >= c.data.records.length)
				break;
			$scope.records.push(c.data.records[index]);
		}
	}

	//
	// Scope
	//
	$scope.pagingIndex = 0;
	$scope.start = 0
	$scope.end = c.data.pagingPageLimit;
	c.searchBy = "-1";
	$scope.IntArray = function(){
		var arr = [];
		for(var i = $scope.start; i < $scope.end; i++){
			arr.push(i);
		}
		return arr;
	};
	$scope.changePage = function(i){
		$scope.pagingIndex = i;
		getRecords();
	};
	$scope.nextPage = function(){
		if($scope.pagingIndex < c.data.pagingPage - 1){
			$scope.pagingIndex++;
			if($scope.pagingIndex >= $scope.end){
				$scope.start += parseInt(c.data.pagingPageLimit/2);
				$scope.end += parseInt(c.data.pagingPageLimit/2);
				if($scope.end > c.data.pagingPage)
					$scope.end = c.data.pagingPage;
			}
			getRecords();
		}
	};
	$scope.prevPage = function(){
		if($scope.pagingIndex > 0){
			$scope.pagingIndex--;
			if($scope.pagingIndex < $scope.start){
				$scope.start-= parseInt(c.data.pagingPageLimit/2);
				$scope.end-= parseInt(c.data.pagingPageLimit/2);
				if($scope.start < 0)
					$scope.start = 0;
			}
			getRecords();
		}
	};
	$scope.btnSearch = function(){
		$scope.data.btnSearch = true;
		$scope.data.keySearch = c.keySearch;
		$scope.data.searchBy = c.searchBy >= 0 ? c.data.fields[c.searchBy] : "GOTO123TEXTQUERY321";
		$scope.server.update().then(function(){
			getRecords();
			$scope.end = c.data.pagingPageLimit;
		});
	};

	//
	// Callback
	//
	getRecords();
}]]></client_script>
        <controller_as>c</controller_as>
        <css/>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>ss_table_list_view_widget</id>
        <internal>false</internal>
        <link/>
        <name>SS table list view widget</name>
        <option_schema>[{"displayValue":"Table","hint":"Table Reference","name":"table","section":"other","default_value":"incident","label":"table","type":"string","value":"sys_db_object","ed":{"reference":"sys_db_object"}},{"hint":"","name":"view","section":"other","default_value":"portal","label":"View","type":"string"},{"hint":"default is 10","name":"paging_number","section":"other","default_value":"10","label":"Paging Number","type":"integer"},{"hint":"Sort By","name":"order_by","section":"other","default_value":"number","label":"Order by","type":"string"},{"name":"order_by_type","section":"other","default_value":"asc","label":"Order By Type","type":"choice","choices":[{"label":"asc","value":"asc"},{"label":"desc","value":"desc"}]}]</option_schema>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {

	data.pagingNumber = options.paging_number >=5 ? options.paging_number : 5;
	data.table = options.table;
	data.view = options.view;
	data.orderBy = options.order_by;
	data.orderByType = options.order_by_type;
	data.queryString = "";

	data.fields = [];
	data.records = [];
	data.fieldsLabel = [];
	data.errorMessage = "";

	data.fields = $sp.getListColumns(data.table, data.view);
	data.fields = data.fields.split(",");
	var grLabel = new GlideRecord(data.table);
	if(!grLabel.isValid()){
		data.errorMessage = "Table is invalid";
		return;
	}
	for(var i in data.fields){
		var field = grLabel.getElement(data.fields[i]);
		data.fieldsLabel.push(field.getLabel());
	}
	data.title = grLabel.getClassDisplayValue();

	if(input){
		if(input.btnSearch){
			data.queryString = input.searchBy + "CONTAINS" + input.keySearch;
		}
	}
	
	var gr = new GlideRecord(data.table);
	gr.addEncodedQuery(data.queryString);
	if(data.orderByType == "asc")
		gr.orderBy(data.orderBy);
	else
		gr.orderByDesc(data.orderBy);
	gr.query();

	while(gr.next()){
		var record = {};
		$sp.getRecordElements(record, gr, data.fields);
		data.records.push(record);
	}

	data.pagingPage = Math.ceil(gr.getRowCount()/data.pagingNumber);
	data.pagingPageLimit = data.pagingPage < 5 ? data.pagingPage : 5;
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-12-31 03:23:19</sys_created_on>
        <sys_id>8e7a9388db32230000fb7a6139961972</sys_id>
        <sys_mod_count>160</sys_mod_count>
        <sys_name>SS table list view widget</sys_name>
        <sys_package display_value="Admin Management" source="x_246851_admin_man">6a8a9652db12230000fb7a61399619af</sys_package>
        <sys_policy/>
        <sys_scope display_value="Admin Management">6a8a9652db12230000fb7a61399619af</sys_scope>
        <sys_update_name>sp_widget_8e7a9388db32230000fb7a6139961972</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-01-02 09:04:19</sys_updated_on>
        <template><![CDATA[<div class="panel panel-warning">
  <div class="panel-heading"><h1>{{data.title}} List View</h1></div>

  <div class="panel-body" ng-if="data.errorMessage != ''">
    <h4>
      {{data.errorMessage}}
    </h4>
  </div>

  <div class="panel-body" ng-if="data.errorMessage == ''">
    <form ng-submit="btnSearch()">
      <select ng-model="c.searchBy">
        <option value="-1">for text</option>
        <option ng-repeat="f in data.fieldsLabel" value="{{$index}}">{{f}}</option>
      </select>
      <input placeholder="Search" ng-model="c.keySearch" />
    </form>
    <div>
      <a href="#">All</a>
      <span ng-if="c.keySearch">
        >
        <a href="#">
          {{c.searchBy >= 0 ? data.fields[c.searchBy] : "Keywords" }} = {{c.keySearch}}
        </a>
      </span>
    </div>
  </div>

  <div class="panel-body" ng-if="data.errorMessage == ''">
    <table class="table">
      <thead>
        <th ng-repeat="f in data.fieldsLabel">
          <div>
            {{f}}
          </div>
        </th>
      </thead>
      <tbody>
        <tr ng-repeat="record in records track by $index">
          <td ng-repeat="f in data.fields" ng-bind="record[f].display_value"></td>
        </tr>
        <tr ng-if="records.length == 0">
          <td colspan="{{data.fields.length}}">Record not found</td>
        </tr>
      </tbody>
      <tfooter>
        <tr ng-if="records.length > 0">
          <td colspan="{{data.fields.length}}">
            <small>
              {{(pagingIndex)*data.pagingNumber + 1}} to 
              {{
              ((pagingIndex+1)*data.pagingNumber) > data.records.length ? 
              data.records.length : ((pagingIndex+1)*data.pagingNumber)
              }} 
              of {{data.records.length}} records</small>
            <button ng-class="{'btn btn-default': true, 'disabled': pagingIndex == 0}" 
                    ng-click="prevPage()">
              Prev
            </button>
            <button ng-repeat="b in IntArray() track by $index"
                    ng-class="{'btn btn-default': true, 'active': b == pagingIndex}"
                    ng-click="changePage(b)">
              {{b + 1}}
            </button>
            <button ng-class="{'btn btn-default': true, 'disabled': pagingIndex == data.pagingPage - 1}" 
                    ng-click="nextPage()">
              Next
            </button>
            <small>{{start + 1}} to {{end}} of {{data.pagingPage}} pages</small>
          </td>
        </tr>
      </tfooter>
    </table>
  </div>

</div>]]></template>
    </sp_widget>
</record_update>
